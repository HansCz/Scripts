#!/bin/bash

work_dir=$1
arch=$2
#host_dir=${work_dir}/${arch}/airootfs/srv/http/archlinux/arch_offline/os/${arch}
host_dir=/srv/http/archlinux/arch_offline/os/${arch}

# A func to download, build ...
build_aur () {
    old_dir=`pwd`
    package=$1
    # Prep with a build-user:
    useradd -m -G wheel builder
    sed -i 's/# %wheel ALL=(ALL) NO/%wheel ALL=(ALL) NO/' /etc/sudoers

    cd /tmp
    rm -rf ${package} ${package}.tar.gz
    wget "https://aur.archlinux.org/cgit/aur.git/snapshot/${package}.tar.gz"
    tar xvzf "${package}.tar.gz"

    cd ${package}
    build_dir=$(pwd)
    chown -R builder.builder /tmp/${package}
    echo " => Buiilding ${package}"
    su - builder -c "(cd ${build_dir}; makepkg -s --noconfirm)" >/dev/null 2>&1

    sh -c "mv *.xz ${host_dir}/${package}.pkg.tar.xz"

    cd ${old_dir}
    userdel builder
    rm -rf /home/builder
    rm -rf /tmp/${package}
    rm /tmp/${package}.tar.gz
}

echo "Starting to sync upstream changes to mirror."

mkdir -p ${host_dir}
rm -rf /tmp/sync /tmp/local

echo " => Retrieving packages"
pacman --noconfirm --dbpath /tmp/ -Syu -w --cachedir ${host_dir} base base-devel syslinux efitools haveged intel-ucode memtest86+ mkinitcpio-nfs-utils nbd zsh git python python-systemd nano sudo iptables dhclient dnsmasq openssh sshfs openssl openvpn gcc openvpn powerdns postgresql sqlite go c-ares http-parser libuv nodejs-less mariadb memcached bzip2 glib2 libev lua51 ragel zlib >/dev/null 2>&1

echo " => Building AUR (Adding packages to packages.both as we go along)"
build_aur "gogs-git" "${host_dir}"
build_aur "lighttpd2-git" "${host_dir}"

echo " => Adding packages to offline database"
sh -c "repo-add ${host_dir}/arch_offline.db.tar.gz ${host_dir}/*.pkg.tar.xz" >/dev/null 2>&1

pacman --config ${work_dir}/pacman.conf -Sy
pacman -Sy
echo "Done syncing offline mirror."
