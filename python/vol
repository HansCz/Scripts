#!/usr/bin/python
import sys, notify2, re
from subprocess import Popen, STDOUT, PIPE
from os.path import abspath

with open(abspath('~/.asoundrc'), 'r') as fh:
	conf = fh.read()
try:
	soundcard = str((int(re.findall('pcm.card [0-9]', conf)[0][-1]) + 1)%3)
except:
	soundcard = '0'

def getDevicename(card):
	handle = Popen('amixer -c ' + str(card) + ' info', shell=True, stdout=PIPE)
	output = b''
	while handle.poll() is None:
		output += handle.stdout.read()
	output += handle.stdout.read()
	handle.stdout.close()
	info = output.decode('utf-8').split('\n')
	trash, hw, name = info[0].split(' ', 2)
	return re.findall("'.*?'", name)[0].strip('\',;. ')

if len(sys.argv) == 0:
	sys.argv.append('help')
elif sys.argv[1] == 'mute':
	handle = Popen('(amixer -c ' + soundcard + ' get Headphone | grep off > /dev/null && amixer -c ' + soundcard + ' -q set Headphone unmute) || amixer -c ' + soundcard + ' -q set Headphone mute', shell=True, stdout=PIPE)
	while handle.poll() is None:
		data = handle.stdout.read()
	handle.stdout.close()
elif sys.argv[1] == 'up':
	handle = Popen('amixer -c ' + soundcard + ' sset Headphone 1dB+', shell=True, stdout=PIPE)
	while handle.poll() is None:
		data = handle.stdout.read()
	handle.stdout.close()
elif sys.argv[1] == 'down':
	handle = Popen('amixer -c ' + soundcard + ' sset Headphone 1dB-', shell=True, stdout=PIPE)
	while handle.poll() is None:
		data = handle.stdout.read()
	handle.stdout.close()
elif sys.argv[1] == 'switch':	

	with open(abspath('~/.asoundrc'), 'w') as fh:
		for line in conf.split('\n'):
			if 'pcm.card' in line:
				notify2.init("slimSOUND")
				card = notify2.Notification('[New soundcard]', getDevicename(soundcard))
				card.show()
				line = 'defaults.pcm.card ' + soundcard + '\n'
			fh.write(line)
else:
	print('Usage:')
	print('vol mute - Mutes/Unmutes the active soundcard')
	print('vol up - increases the volume by 1dB')
	print('vol down - decreases the volume by 1dB')
	print('vol switch - Switches the default soundcard')